#| label: setup
#| echo: false
#| include: true
library(data.table)
library(kableExtra)
tt <- fread("figures/tbl_longterm_trends.dat")
tt <- tt[var %in% c("DIR_att","HOR_att","GLB_att"), c("var","slope","DATA","slope.stat_sig")]
tt <- tt[var %in% c("DIR_att","GLB_att"), c("DATA","var","slope","slope.stat_sig")]
tt$slope <- tt$slope * 100
setorder(tt,DATA)
tt
tt$var
tt$var[tt$var == "DIR_att"] <- "Direct Beam"
tt$var[tt$var == "GLB_att"] <- "Global"
tt$var
#| label:   setup
#| echo:    false
#| include: true
library(data.table)
library(kableExtra)
#| echo: false
tt <- fread("figures/tbl_longterm_trends.dat")
tt <- tt[var %in% c("DIR_att","HOR_att","GLB_att"), c("var","slope","DATA","slope.stat_sig")]
tt <- tt[var %in% c("DIR_att","GLB_att"), c("DATA","var","slope","slope.stat_sig")]
tt$slope <- tt$slope * 100
setorder(tt,DATA)
tt$var[tt$var == "DIR_att"] <- "Direct Beam"
tt$var[tt$var == "GLB_att"] <- "Global"
names(tt)[names(tt)=="slope"]          <- "Change per year [%]"
names(tt)[names(tt)=="var"]            <- "Variable"
names(tt)[names(tt)=="DATA"]           <- "Sky Cond."
names(tt)[names(tt)=="slope.stat_sig"] <- "Statistical signif. [%]"
# pander(tt, emphasize.strong.rows = which(tt$`Statistical signif.` > 90, arr.ind = TRUE))
# tt$`Statistical signif. [%]` = cell_spec(tt$`Statistical signif. [%]`, color = ifelse(tt$`Statistical signif. [%]` > 50, "red", "blue"))
gcol <- rep(0, nrow(tt) )
gcol[ (tt$`Statistical signif. [%]` > 50) ] <- "blue"
kable(tt, digits = 1) %>%
column_spec(which(names(tt) == "Change per year [%]"), bold =      (tt$`Statistical signif. [%]` > 50) ) %>%
column_spec(which(names(tt) == "Change per year [%]"), strikeout = (tt$`Statistical signif. [%]` < 50) ) %>%
column_spec(which(names(tt) != "Statistical signif. [%]"),
color = gcol )
source("~/MANUSCRIPTS/2022_sdr_trends/DHI_GHI_1_longterm_trends.R")
# /* #!/usr/bin/env Rscript */
# /* Copyright (C) 2022 Athanasios Natsis <natsisthanasis@gmail.com> */
#' ---
#' title:         "Trends of SDR in Thessaloniki "
#' author:
#'   - Natsis Athanasios^[Laboratory of Atmospheric Physics,AUTH, natsisthanasis@gmail.com]
#'   - Jane Doe^[Institution Two, jane@example.org]
#' abstract:
#'   "Study of GHI and DNI radiation for 'clear sky' and all sly conditions."
#'
#' documentclass:  article
#' classoption:    a4paper,oneside
#' fontsize:       10pt
#' geometry:       "left=0.5in,right=0.5in,top=0.5in,bottom=0.5in"
#' link-citations: yes
#' colorlinks:     yes
#'
#' header-includes:
#' - \usepackage{caption}
#' - \usepackage{placeins}
#' - \captionsetup{font=small}
#'
#' output:
#'   bookdown::pdf_document2:
#'     number_sections:  no
#'     fig_caption:      no
#'     keep_tex:         no
#'     latex_engine:     xelatex
#'     toc:              yes
#'     toc_depth:        4
#'     fig_width:        7
#'     fig_height:       4.5
#'   html_document:
#'     toc:        true
#'     fig_width:  7.5
#'     fig_height: 5
#' date: "`r format(Sys.time(), '%F')`"
#'
#' ---
#+ echo=F, include=T
####_  Document options _####
#+ echo=F, include=F
knitr::opts_chunk$set(comment    = ""      )
# knitr::opts_chunk$set(dev        = "pdf"   )
knitr::opts_chunk$set(dev        = "png"    )
knitr::opts_chunk$set(out.width  = "100%"   )
knitr::opts_chunk$set(fig.align  = "center" )
knitr::opts_chunk$set(cache      =  F       ) ## !!!!
# knitr::opts_chunk$set(fig.pos    = '!h'    )
warning("Don't use cache it breaks computations")
#+ include=F, echo=F
####  Set environment  ####
Sys.setenv(TZ = "UTC")
tic <- Sys.time()
Script.Name <- tryCatch({ funr::sys.script() },
error = function(e) { cat(paste("\nUnresolved script name: ", e),"\n\n")
return("Climatological_") })
if(!interactive()) {
pdf(  file = paste0("~/MANUSCRIPTS/2022_sdr_trends/runtime/",  basename(sub("\\.R$",".pdf", Script.Name))))
sink( file = paste0("~/MANUSCRIPTS/2022_sdr_trends/runtime/",  basename(sub("\\.R$",".out", Script.Name))), split=TRUE)
filelock::lock(paste0("~/MANUSCRIPTS/2022_sdr_trends/runtime/",basename(sub("\\.R$",".lock",Script.Name))),timeout = 0)
}
par(pch = ".")
#+ echo=F, include=T
####  External code  ####
library(data.table, quietly = T, warn.conflicts = F)
library(pander,     quietly = T, warn.conflicts = F)
panderOptions('table.alignment.default', 'right')
panderOptions('table.split.table',        120   )
## Functions from `https://github.com/thanasisn/IStillBreakStuff/tree/main/FUNCTIONS/R`
source("~/CODE/FUNCTIONS/R/sumNA.R")
source("~/CODE/FUNCTIONS/R/linear_fit_stats.R")
source("~/CODE/FUNCTIONS/R/trig_deg.R")
source("~/CODE/FUNCTIONS/R/data.R")
## For this project
source("~/MANUSCRIPTS/2022_sdr_trends/DHI_GHI_0_variables.R")
source("~/MANUSCRIPTS/2022_sdr_trends/DHI_GHI_0_data_input.R")
## move to data_input for all three
# rm(DATA_Clear)
# rm(DATA_all)
options(error = function() {
if (interactive()) {
system("mplayer /usr/share/sounds/freedesktop/stereo/dialog-warning.oga", ignore.stdout = T, ignore.stderr = T)
system("notify-send -u normal -t 30000 'R session' 'An error occured!'")
}
})
#+ echo=F, include=T
#' ### Data range
#' Time data span `r range(ALL_1_daily_mean$Date)`
#'
#' ## 1. Long term anomaly trends
#'
#+ echo=F, include=F
## ~ Plot all data  ####
data_list  <- list(ALL   = ALL_1_daily_mean,
CLEAR = CLEAR_1_daily_mean)
by_var     <- c("Date","doy")
wecare     <- unique(unlist(lapply(data_list, names)))
wecare     <- grep(paste0(by_var,collapse = "|"), wecare, invert = T, value = T)
## plot data
for(i in 1:length(data_list)) {
Dplot <- data_list[[i]]
for (xvar in by_var){
for (yvar in wecare) {
if (! yvar %in% names(Dplot)) next()
col <- get(paste0(c("col",unlist(strsplit(yvar,split = "_" ))[1:2]),collapse = "_"))
vect <- Dplot[[yvar]]
plot(Dplot[[xvar]], vect,
pch = ".", col = col,
main = paste(names(data_list[i]), yvar),
xlab = xvar, ylab = yvar )
}
#### plot histograms ####
for(i in 1:length(data_list)) {
Dplot <- data_list[[i]]
# intersect(names(Dplot),wecare)
for (yvar in wecare) {
if (! yvar %in% names(Dplot)) next()
col <- get(paste0(c("col",unlist(strsplit(yvar,split = "_" ))[1:2]),collapse = "_"))
vect <- Dplot[[yvar]]
hist(vect,
main = paste(names(data_list[i]), yvar),
breaks = 100, col = col)
}
#+ echo=F, include=F
## ~ Plots seasonal data ####
data_list  <- list(ALL_Seas   =   ALL_1_daily_seas,
CLEAR_Seas = CLEAR_1_daily_seas)
by_var     <- c("doy")
wecare     <- unique(unlist(lapply(data_list, names)))
wecare     <- grep("HOR|GLB|DIR", wecare, value = T)
for(i in 1:length(data_list)) {
Dplot <- data_list[[i]]
for (xvar in by_var){
for (yvar in wecare) {
if (! yvar %in% names(Dplot)) next()
col <- get(paste0(c("col",unlist(strsplit(yvar,split = "_" ))[1:2]),collapse = "_"))
vect <- Dplot[[yvar]]
plot(Dplot[[xvar]], vect,
pch = ".", col = col,
main = paste(names(data_list[i]), yvar),
xlab = xvar, ylab = yvar)
}
for(i in 1:length(data_list)) {
Dplot <- data_list[[i]]
for (yvar in wecare) {
if (! yvar %in% names(Dplot)) next()
col <- get(paste0(c("col",unlist(strsplit(yvar,split = "_" ))[1:2]),collapse = "_"))
vect <- Dplot[[yvar]]
hist(vect,
main = paste(names(data_list[i]), yvar),
breaks = 100, col = col)
}
rm(data_list)
#### Calculate seasonal anomaly ####
#' #### Calculate seasonal anomaly ####
#+ echo=F, include=F
##TODO margin of error for anomaly!!!!
ALL_1_daily_DEseas   <- merge(  ALL_1_daily_mean,   ALL_1_daily_seas, by = "doy", all = T)
CLEAR_1_daily_DEseas <- merge(CLEAR_1_daily_mean, CLEAR_1_daily_seas, by = "doy", all = T)
setorder(ALL_1_daily_DEseas,   Date)
setorder(CLEAR_1_daily_DEseas, Date)
## anomaly
# #' #### Use the actual difference from seasonal
# ALL_1_daily_DEseas[   , DIR_att    := DIR_att    - DIR_att_seas    ]
# ALL_1_daily_DEseas[   , GLB_att    := GLB_att    - GLB_att_seas    ]
# ALL_1_daily_DEseas[   , DIR_transp := DIR_transp - DIR_transp_seas ]
# CLEAR_1_daily_DEseas[ , DIR_att    := DIR_att    - DIR_att_seas    ]
# CLEAR_1_daily_DEseas[ , GLB_att    := GLB_att    - GLB_att_seas    ]
# CLEAR_1_daily_DEseas[ , DIR_transp := DIR_transp - DIR_transp_seas ]
##TODO margin of error for anomaly!!!!
## relative anomaly
#' #### Use the % difference from seasonal values
#+ echo=F, include=T
ALL_1_daily_DEseas[  , DIR_att   := 100*( DIR_att    - DIR_att_seas    ) / DIR_att_seas    ]
ALL_1_daily_DEseas[  , HOR_att   := 100*( HOR_att    - HOR_att_seas    ) / HOR_att_seas    ]
ALL_1_daily_DEseas[  , GLB_att   := 100*( GLB_att    - GLB_att_seas    ) / GLB_att_seas    ]
ALL_1_daily_DEseas[  , DIR_transp:= 100*( DIR_transp - DIR_transp_seas ) / DIR_transp_seas ]
## add tsi data to data
ALL_1_daily_mean[ , tsi1au_att := 100*(tsi1au_att - mean(tsi1au_att)) / mean(tsi1au_att)  ]
ALL_1_daily_mean <-
merge( ALL_1_daily_DEseas,
ALL_1_daily_mean[, .(Date, tsi1au_att)], by = "Date", all = T )
CLEAR_1_daily_DEseas[, DIR_att   := 100*( DIR_att    - DIR_att_seas    ) / DIR_att_seas    ]
CLEAR_1_daily_DEseas[, HOR_att   := 100*( HOR_att    - HOR_att_seas    ) / HOR_att_seas    ]
CLEAR_1_daily_DEseas[, GLB_att   := 100*( GLB_att    - GLB_att_seas    ) / GLB_att_seas    ]
CLEAR_1_daily_DEseas[, DIR_transp:= 100*( DIR_transp - DIR_transp_seas ) / DIR_transp_seas ]
#+ echo=F, include=F
## create a float year value
ALL_1_daily_DEseas$DYear <- as.numeric(  ALL_1_daily_DEseas$Date) / Days_of_year
CLEAR_1_daily_DEseas$DYear <- as.numeric(CLEAR_1_daily_DEseas$Date) / Days_of_year
#### TOTAL TRENDS  #############################################################
## gather trends
gather <- data.frame()
## ~ plot all sky trends ####
#' \newpage
#' ## Trends on all sky conditions data
#+ longtermtrendsALL, echo=F, include=T, results="asis"
vars <- c("HOR_att","DIR_transp", "DIR_att", "GLB_att", "tsi1au_att")
dbs  <- c("ALL_1_daily_DEseas")
for (DBn in dbs) {
DB <- get(DBn)
for (avar in vars) {
dataset <- DB
## linear model
lm1 <- lm( dataset[[avar]] ~ dataset$Date )
# lm1 <- lm( dataset[[avar]] ~ dataset$DYear )
## catpture lm
gather <- rbind(gather,
data.frame(
linear_fit_stats(lm1, confidence_interval = Daily_confidence_limit),
DATA      = DBn,
var       = avar,
N         = sum(!is.na(dataset[[avar]]))
))
par("mar" = c(3,4,2,1))
## plot data
plot(dataset$Date, dataset[[avar]],
pch  = ".", col = get(paste0("col_",avar)),
cex  = 2,
xlab = "",
ylab = bquote("Seasonal Anomaly [%]" ) )
# ylab = bquote("Deseas." ~ .(translate(avar)) ~ "[" ~ Watt/m^2 ~ "]" ) )
## plot fit line
abline(lm1, lwd = 2)
## plot running mean
# partial window using adaptive rolling function
# an = function(n, len) c(seq.int(n), rep(n, len-n))
# n = an(round(Days_of_year * 5), nrow(dataset))
# rm <- frollmean(dataset[[avar]], n, adaptive=TRUE,
#           na.rm = TRUE, algo = "exact")
rm <- frollmean(dataset[[avar]], round(Days_of_year * 4),
na.rm = TRUE, algo = "exact", align = "center")
points(dataset$Date, rm, col = "red")
## decorations
fit <- lm1[[1]]
legend('top', lty = 1, bty = "n", lwd = 2, cex = 2,
paste('Y =', signif(fit[1],2),if(fit[2]>0)'+'else'-',signif(abs(fit[2]),3),'* year'))
title(paste(translate(sub("_.*","",DBn)), translate(avar)), cex.main = 0.7)
}
#+ echo=F, include=F
gather
## ~ plot clear sky trends ####
#' \newpage
#' ## Trends on Clear sky conditions data
#+ longtermtrendsCS, echo=F, include=T, results="asis"
vars        <- c("HOR_att","DIR_transp","DIR_att","GLB_att")
dbs         <- c("CLEAR_1_daily_DEseas")
for (DBn in dbs) {
DB <- get(DBn)
for (avar in vars) {
dataset <- DB
## linear model
lm1        <- lm( dataset[[avar]] ~ dataset$Date )
## catpture lm
gather <- rbind(gather,
data.frame(
linear_fit_stats(lm1, confidence_interval = Daily_confidence_limit),
DATA      = DBn,
var       = avar,
N         = sum(!is.na(dataset[[avar]]))
))
## plot
par("mar" = c(3,4,2,1))
plot(dataset$Date, dataset[[avar]],
pch  = ".", col = get(paste0("col_",avar)),
cex  = 2,
xlab = "",
ylab = bquote("Seasonal Anomaly [%]" ) )
# ylab = bquote("Deseas." ~ .(translate(avar)) ~ "[" ~ Watt/m^2 ~ "]" ) )
abline(lm1, lwd = 2)
## plot running mean
# partial window using adaptive rolling function
# an = function(n, len) c(seq.int(n), rep(n, len-n))
# n = an(round(Days_of_year * 5), nrow(dataset))
# rm <- frollmean(dataset[[avar]], n, adaptive=TRUE,
#           na.rm = TRUE, algo = "exact")
rm <- frollmean(dataset[[avar]], round(Days_of_year * 4),
na.rm = TRUE, algo = "exact", align = "center")
points(dataset$Date, rm, col = "red")
## decorations
fit <- lm1[[1]]
legend('top', lty = 1, bty = "n", lwd = 2, cex = 2,
paste('Y =', signif(fit[1],2),if(fit[2]>0)'+'else'-',signif(abs(fit[2]*Days_of_year),3),'* year'))
title(paste(translate(sub("_.*","",DBn)),translate(avar)), cex.main = 0.7)
}
wecare <- grep("intercept", names(gather), value = T, invert = T)
gather <- data.table(gather)
gather$DATA <- sub("_.*","",gather$DATA)
gather
lm1
abs(fit[2])
## gather trends
gather <- data.frame()
## ~ plot all sky trends ####
#' \newpage
#' ## Trends on all sky conditions data
#+ longtermtrendsALL, echo=F, include=T, results="asis"
vars <- c("HOR_att","DIR_transp", "DIR_att", "GLB_att", "tsi1au_att")
dbs  <- c("ALL_1_daily_DEseas")
for (DBn in dbs) {
DB <- get(DBn)
for (avar in vars) {
dataset <- DB
## linear model
lm1 <- lm( dataset[[avar]] ~ dataset$Date )
# lm1 <- lm( dataset[[avar]] ~ dataset$DYear )
## catpture lm
gather <- rbind(gather,
data.frame(
linear_fit_stats(lm1, confidence_interval = Daily_confidence_limit),
DATA      = DBn,
var       = avar,
N         = sum(!is.na(dataset[[avar]]))
))
par("mar" = c(3,4,2,1))
## plot data
plot(dataset$Date, dataset[[avar]],
pch  = ".", col = get(paste0("col_",avar)),
cex  = 2,
xlab = "",
ylab = bquote("Seasonal Anomaly [%]" ) )
# ylab = bquote("Deseas." ~ .(translate(avar)) ~ "[" ~ Watt/m^2 ~ "]" ) )
## plot fit line
abline(lm1, lwd = 2)
## plot running mean
# partial window using adaptive rolling function
# an = function(n, len) c(seq.int(n), rep(n, len-n))
# n = an(round(Days_of_year * 5), nrow(dataset))
# rm <- frollmean(dataset[[avar]], n, adaptive=TRUE,
#           na.rm = TRUE, algo = "exact")
rm <- frollmean(dataset[[avar]], round(Days_of_year * 4),
na.rm = TRUE, algo = "exact", align = "center")
points(dataset$Date, rm, col = "red")
## decorations
fit <- lm1[[1]]
legend('top', lty = 1, bty = "n", lwd = 2, cex = 2,
paste('Y =', signif(fit[1],2),if(fit[2]>0)'+'else'-',signif(abs(fit[2])*Days_of_year,3),'* year'))
title(paste(translate(sub("_.*","",DBn)), translate(avar)), cex.main = 0.7)
}
source("~/MANUSCRIPTS/2022_sdr_trends/DHI_GHI_1_longterm_trends.R")
#+ echo=F, include=T
pander(pprint,
cap = "Slope is in %/year")
source("~/.active-rstudio-document", echo=TRUE)
source("~/LOGs/training_status/training_analysis/GC_plots_b.R")
source("~/LOGs/training_status/training_analysis/GC_plots_b_3.R")
source("~/LOGs/training_status/training_analysis/GC_read_rides.R")
file.mtime(gccache)
gccache
storagefl
